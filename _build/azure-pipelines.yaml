# Go
# Build and test your Go application.
# Add steps that save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

pool:
  vmImage: 'Ubuntu 16.04'

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.13' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code
  GO111MODULE: 'on'
  DOCKER_BUILDKIT: 1

steps:

# Go tool installer
# Find in cache or download a specific version of Go and add it to the PATH
- task: GoTool@0
  inputs:
    version: '1.13'

- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    shopt -s extglob
    mv !(gopath) '$(modulePath)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up the Go workspace'

- script: |
    go version
    go get -v -t -d ./...
  workingDirectory: '$(modulePath)'
  displayName: 'Get dependencies'

- script: |
    go test -v -race -coverprofile=coverage.txt -covermode atomic 2>&1 ./...
    bash <(curl -s https://codecov.io/bash)
  continueOnError: true
  workingDirectory: '$(modulePath)'
  displayName: 'Run unit tests'

- script: |
    go build -v
  workingDirectory: '$(modulePath)'
  continueOnError: true
  displayName: 'Build App: mydms-go'

- task: Docker@2
  displayName: Login to Docker Hub
  inputs:
    command: login
    containerRegistry: dockerhub

- task: Docker@2
  displayName: 'Build Docker image: mydms'
  inputs:
    command: build
    Dockerfile: '$(modulePath)/Dockerfile'
    repository: bihe/mydms-go
    tags: |
      latest
      $(buildtime_varialbe_commit)
    arguments: |
      --build-arg buildtime_variable_version=$(buildtime_variable_version)
      --build-arg buildtime_variable_timestamp=$(buildtime_variable_timestamp)
      --build-arg buildtime_varialbe_commit=$(buildtime_varialbe_commit)

- task: Docker@2
  displayName: 'Build Docker image to dockerhub'
  inputs:
    command: push
    repository: bihe/mydms-go
    tags: |
      latest
      $(buildtime_varialbe_commit)

